apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: spark
  creationTimestamp: "2020-12-29T15:04:50Z"
  generation: 1
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-4.4.0
  name: my-release-spark-master
  namespace: spark
  resourceVersion: "24015312"
  selfLink: /apis/apps/v1/namespaces/spark/statefulsets/my-release-spark-master
  uid: 221f9149-7e4a-4fd2-bda6-921ffb428a47
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: spark
  serviceName: my-release-spark-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spark
        helm.sh/chart: spark-4.4.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: master
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/name: spark
              namespaces:
              - spark
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: SPARK_MODE
          value: master
        - name: SPARK_DAEMON_MEMORY
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_MASTER_WEBUI_PORT
          value: "8080"
        image: docker.io/bitnami/spark:3.0.1-debian-10-r87
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: spark-master
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 7077
          name: cluster
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: my-release-spark-master-57ff7bcf7d
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: my-release-spark-master-57ff7bcf7d
  updatedReplicas: 1
